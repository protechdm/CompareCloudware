@model CompareCloudware.Web.Models.CloudApplicationVideoModel
@using CompareCloudware.Web.Helpers;
@using System.Configuration;
@using CompareCloudware.Web.Models;

<div id="videoContainer" class="videoContainer">
    <img alt="Invalid URL" id="invalidURL" src="@Url.Content("~/Images/empty.png")"  />
    @Html.HiddenFor(x => x.CloudApplicationVideoID)
    @Html.HiddenFor(x => x.IsLive)
    
    @Html.HiddenFor(x => x.CloudApplicationVideoDomains.ChosenValue)
    @Html.HiddenFor(x => x.CloudApplicationVideoExtensions.ChosenValue)
    @Html.HiddenFor(x => x.CloudApplicationVideoFileFormat)
    @Html.HiddenFor(x => x.CloudApplicationVideoFileName)
    @Html.HiddenFor(x => x.CloudApplicationVideoURL)
    @Html.HiddenFor(x => x.IsBrokenLink)
    @Html.HiddenFor(x => x.IsLocalDomain)
    @Html.HiddenFor(x => x.IsYouTubeStream)
    @Html.HiddenFor(x => x.ReadyToPlay)
    @Html.HiddenFor(x => x.CloudApplicationVideoStatus)

    @if (Model.CloudApplicationVideoStatus.ToUpper() == "LIVE" || (Model.CloudApplicationVideoStatus.ToUpper() == "ADDED" && Model.ReadyToPlay))
    {
    <table style="width:100%">
    <tr>
        <td>
            <script>
                $(document).ready(function () {
                    var v = document.getElementById("movie");
                    if (v != null) {
                        //alert("Found video tag");
                        if (v.paused) {
                            //alert("Will play");
                            v.play();
                        } else {
                            //alert("Will pause");
                            v.pause();
                        }
                    }
                    else {
                        //alert("No video tag");
                    }
                });

                var v = document.getElementById("movie");
                if (v != null) {
                    v.onclick = function () {
                        if (v.paused) {
                            //alert("Will play");
                            v.play();
                        } else {
                            v.pause();
                        }
                    };
                }
            </script>
            @{bool debugMode = Convert.ToBoolean(ConfigurationManager.AppSettings["DebugMode"]);}
            @{string videosFolder = ConfigurationManager.AppSettings["VideosFolder"];}
            @{CloudApplicationVideoModel video = Model;}
            @{string videoWidth = ConfigurationManager.AppSettings["VideoWidth"];}
            @{string videoHeight = ((int)(Convert.ToDecimal(videoWidth) * Convert.ToDecimal(ConfigurationManager.AppSettings["HeightToWidthFactor"]))).ToString() + "px";}
            @{videoWidth += "px";}
            @if (video.ReadyToPlay)
            {

                var url = "";
                if (video.IsLocalDomain)
                {
                    url = "http://" + Request.Url.Authority + Request.ApplicationPath + (Request.ApplicationPath.EndsWith("/") ? "" : "/") + videosFolder + video.CloudApplicationVideoFileName;
                    //url = Request.Url.Authority + Request.ApplicationPath + (Request.ApplicationPath.EndsWith("/") ? "" : "/") + videosFolder + video.CloudApplicationVideoFileName;
                    //url = "../Images/Videos/" + video.SneakPeekVideoFileName;
                }
                else
                {
                    url = "http://" + video.CloudApplicationVideoURL;
                    url = video.CloudApplicationVideoURL;
                }
                var MIMEType = video.CloudApplicationVideoFileFormat.ToLowerInvariant();
                var useVideoTag = false;
                var useFallBackToFlashContainer = false;
                var useFallBackToQuickTimeContainer = false;
                if (
                                !video.IsYouTubeStream &&
                                video.CloudApplicationVideoFileFormat.ToUpperInvariant() != "SWF" &&
                                video.CloudApplicationVideoFileFormat.ToUpperInvariant() != "MOV" &&
                                video.CloudApplicationVideoFileFormat.ToUpperInvariant() != "HTML" &&
                                video.CloudApplicationVideoFileFormat != null &&
                                (video.CloudApplicationVideoFileFormat.ToUpperInvariant() != "MP4" || (video.CloudApplicationVideoFileFormat.ToUpperInvariant() == "MP4" && Model.CustomSession.DetectedBrowser.ToUpperInvariant() != "FIREFOX")) &&
                                Model.CustomSession.DetectedBrowserID.ToUpperInvariant() != "IE8" &&
                                Model.CustomSession.DetectedBrowserID.ToUpperInvariant() != "IE7" &&
                                Model.CloudApplicationVideoFileFormat.ToUpperInvariant() != "IN A HTML PAGE"
                    //&&
                    //(
                    //    (Model.CustomSession.DetectedBrowserID.ToUpperInvariant() != "SAFARI3TO4" && !Model.CustomSession.DetectedBrowserIsAPhone) 
                    //    || 
                    //    (Model.CustomSession.DetectedBrowserID.ToUpperInvariant() == "SAFARI4" && Model.CustomSession.DetectedBrowserIsAPhone)
                    //)
                    )
                {
                    useVideoTag = true;
                }

                if (video.CloudApplicationVideoFileFormat.ToUpperInvariant() == "MP4" && (Model.CustomSession.DetectedBrowser.ToUpperInvariant() == "FIREFOX" || Model.CustomSession.DetectedBrowserID.ToUpperInvariant() == "IE7" || Model.CustomSession.DetectedBrowserID.ToUpperInvariant() == "IE8")
                    //|| video.CloudApplicationVideoFileFormat.ToUpperInvariant() == "SWF"
                                )
                {
                    useFallBackToFlashContainer = true;
                }

                if (video.CloudApplicationVideoFileFormat.ToUpperInvariant() == "MOV")
                {
                    useFallBackToQuickTimeContainer = true;
                }

                if (Model.CustomSession.DetectedBrowserID.ToUpperInvariant() == "SAFARI3TO4" 
                    && !Model.CustomSession.DetectedBrowserIsAPhone 
                    && !Model.CustomSession.DetectedBrowserIsAnIPAD 
                    && !Model.IsYouTubeStream
                    && video.CloudApplicationVideoFileFormat.ToUpperInvariant() != "SWF"
                )
                {
                    //RICH's desktop needs HTML5 video tag
                    useFallBackToQuickTimeContainer = false;
                    useVideoTag = true;
                }

                if (Model.CustomSession.DetectedBrowserID.ToUpperInvariant() == "SAFARI3TO4" 
                    && (Model.CustomSession.DetectedBrowserIsAPhone || Model.CustomSession.DetectedBrowserIsAnIPAD &&!Model.IsYouTubeStream))
                {
                    //IPADS & IPHONES need QuickTime container
                    useFallBackToQuickTimeContainer = true;
                    useVideoTag = false;
                }

                //if (Model.CustomSession.DetectedBrowserID.ToUpperInvariant() == "SAFARI4")
                //{
                //    useVideoTag = false;
                //    useFallBackToQuickTimeContainer = true;
                //}

                if (debugMode)
                {
                        <div style="position:relative;">
                            <label class="font-bold-13px-black">BROWSER : @Model.CustomSession.DetectedBrowserID.ToUpperInvariant()</label>
                            <label class="font-bold-13px-black">USE FLASH CONTAINER : @useFallBackToFlashContainer.ToString()</label>
                            <label class="font-bold-13px-black">USE QUICKTIME CONTAINER : @useFallBackToQuickTimeContainer.ToString()</label>
                            <label class="font-bold-13px-black">USE HTML5 VIDEO TAG : @useVideoTag.ToString()</label>
                            <label class="font-bold-13px-black">REQUEST IS FROM A PHONE : @Model.CustomSession.DetectedBrowserIsAPhone.ToString()</label>
                            <label class="font-bold-13px-black">REQUEST IS FROM AN IPAD : @Model.CustomSession.DetectedBrowserIsAnIPAD.ToString()</label>
                        </div>
                }

                if (useVideoTag)
                {
                @:<div class="video-documents" style="float: left;">
                <video id="movie" width="@videoWidth" height="@videoHeight" xautoplay preload controls> 
                @if (video.CloudApplicationVideoFileFormat.ToUpperInvariant() == "WEBM")
                { 
@*                    <source src="@Url.Content("~/" + videosFolder + video.CloudApplicationVideoFileName)"
                        type="video/webm; codecs=vp8,vorbis" />*@ 
                    <source src="@url" type="video/webm; codecs=vp8,vorbis" /> 

                }
                else if (video.CloudApplicationVideoFileFormat.ToUpperInvariant() == "OGV")
                { 
@*                    <source type="video/ogg; codecs=theora,vorbis" src="../Images/Videos/pr6.ogv"/>*@
                    <source type="video/ogg; codecs=theora,vorbis" src="@url"/>
                }
                else if (video.CloudApplicationVideoFileFormat.ToUpperInvariant() == "MP4" &&
                    Model.CustomSession.DetectedBrowser.ToUpperInvariant() != "FIREFOX")
                { 
@*                    <source src="../Images/Videos/pr6.mp4" />*@ 
                    <source src="@url" type="video/mp4"/> 
                } 
                </video> 
                @:</div>                         
            }

                if (useFallBackToFlashContainer)
                {
                @:<div class="video-documents" style="float: left;">
                <object data="http://releases.flowplayer.org/swf/flowplayer-3.2.1.swf" width="@videoWidth" type="application/x-shockwave-flash" height="@videoHeight"> 
                <param name="movie" value="http://releases.flowplayer.org/swf/flowplayer-3.2.1.swf" /> 
                <param name="allowfullscreen" value="true" /> 
                <param name="flashvars" value="config={'clip':{'url':'@url','autoPlay':false,'autoBuffering':true}}" /> 
                <embed width="100%" height="100%" name="plugin" src="@url" type="video/@MIMEType" />
                </object> 
                @:</div>
            }

                if (useFallBackToQuickTimeContainer)
                {
                @:<div class="video-documents" style="float: left;">
                <object width="@videoWidth" height="@videoHeight" classid="clsid:02BF25D5-8C17-4B23-BC80-D3488ABDDC6B" codebase="http://www.apple.com/qtactivex/qtplugin.cab">
                <param name="src" value="@url" /> 
                <param name="href" value="@url" /> 
                <param name="target" value="myself" /> 
                <param name="controller" value="true" /> 
                <param name="autoplay" value="false" /> 
@*                <param name="scale" value="aspect" />*@ 
                <param name="scale" value="tofit" /> 
                <param name="allowFullScreen" value="true" /> 
                <embed width="@videoWidth" height="@videoHeight" type="video/quicktime" pluginspage="http://www.apple.com/quicktime/download/" src="@url" href="@url" target="myself" controller="true" autoplay="true" scale="tofit" allowFullScreen="true"></embed> 
                </object> 
                @:</div>                         
            }

                if (video.IsYouTubeStream)
                {
                @Video.Flash(path: video.CloudApplicationVideoURL,
                                              width: @videoWidth,
                                              height: @videoHeight,
                                     play: false,
                                     loop: true,
                                     menu: true,
                                     bgColor: "red",
                                     quality: "medium",
                                     scale: "exactfit",
                                     windowMode: "transparent")
                }
                if (video.CloudApplicationVideoFileFormat.ToUpperInvariant() == "SWF")
                {
                @Video.Flash(path: url,
                                              width: @videoWidth,
                                              height: @videoHeight,
                                     play: false,
                                     loop: true,
                                     menu: true,
                                     bgColor: "red",
                                     quality: "medium",
                                     scale: "exactfit",
                                     windowMode: "transparent",
                                     htmlAttributes: "allowfullscreen=true"
                                     )
                }
                if (video.CloudApplicationVideoFileFormat.ToUpperInvariant() == "IN A HTML PAGE")
                {
                    <div class="videoWrapper">
                        <iframe id="theVideo" style="border: 0px;" src="@video.CloudApplicationVideoURL" width="600px" height="450px"></iframe>
                    </div>
                }
            }
        </td>
    </tr>
</table>
    }
    else
    {
        @:NO VIDEO
    }
</div>
