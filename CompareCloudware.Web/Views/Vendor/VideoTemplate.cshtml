@model CompareCloudware.Web.Models.CloudApplicationVideoModel
@using CompareCloudware.Web.Helpers;
@using System.Configuration;
@using CompareCloudware.Web.Models;

<div id="videoContainer">
        <img alt="Invalid URL" id="invalidURL" src="@Url.Content("~/Images/empty.png")"  />

@*        @Html.HiddenFor(x => x.CloudApplicationVideoDomains.ChosenValue)
        @Html.HiddenFor(x => x.CloudApplicationVideoExtensions.ChosenValue)
        @Html.HiddenFor(x => x.CloudApplicationVideoFileFormat)
        @Html.HiddenFor(x => x.CloudApplicationVideoFileName)
        @Html.HiddenFor(x => x.CloudApplicationVideoURL)
        @Html.HiddenFor(x => x.IsBrokenLink)
        @Html.HiddenFor(x => x.IsLocalDomain)
        @Html.HiddenFor(x => x.IsYouTubeStream)
        @Html.HiddenFor(x => x.ReadyToPlay)*@
<table style="width:100%">
    <tr>
        <td>
            <script>
                var v = document.getElementById("movie");
                if (v != null) {
                    v.onclick = function () {
                        if (v.paused) {
                            v.play();
                        } else {
                            v.pause();
                        }
                    };
                }
            </script>
            @{string videosFolder = ConfigurationManager.AppSettings["VideosFolder"];}
            @{CloudApplicationVideoModel video = Model;}


            @if (video.ReadyToPlay)
            {

                var url = "";
                if (video.IsLocalDomain)
                {
                    url = "http://" + Request.Url.Authority + Request.ApplicationPath + (Request.ApplicationPath.EndsWith("/") ? "" : "/") + videosFolder + video.CloudApplicationVideoFileName;
                }
                else
                {
                    //url = "http://" + video.CloudApplicationVideoURL;
                    url = video.CloudApplicationVideoURL;
                }
                var MIMEType = video.CloudApplicationVideoFileFormat.ToLowerInvariant();
            var useVideoTag = false;
            var useFallBackToFlashContainer = false;
            var useFallBackToQuickTimeContainer = false;
            if (
                            !video.IsYouTubeStream &&
                            video.CloudApplicationVideoFileFormat.ToUpperInvariant() != "SWF" &&
                            video.CloudApplicationVideoFileFormat.ToUpperInvariant() != "MOV" &&
                            video.CloudApplicationVideoFileFormat != null &&
                            (video.CloudApplicationVideoFileFormat.ToUpperInvariant() != "MP4" || (video.CloudApplicationVideoFileFormat.ToUpperInvariant() == "MP4" && Model.CustomSession.DetectedBrowser.ToUpperInvariant() != "FIREFOX")) &&
                            Model.CustomSession.DetectedBrowserID.ToUpperInvariant() != "IE8")
            {
                useVideoTag = true;
            }

            if (video.CloudApplicationVideoFileFormat.ToUpperInvariant() == "MP4" && (Model.CustomSession.DetectedBrowser.ToUpperInvariant() == "FIREFOX" || Model.CustomSession.DetectedBrowserID.ToUpperInvariant() == "IE8")
                //|| video.CloudApplicationVideoFileFormat.ToUpperInvariant() == "SWF"
                            )
            {
                useFallBackToFlashContainer = true;
            }

            if (video.CloudApplicationVideoFileFormat.ToUpperInvariant() == "MOV")
            {
                useFallBackToQuickTimeContainer = true;
            }

            if (useVideoTag)
            {
                @:<div class="video-documents" style="float: left;">
                <video id="movie" width="320" height="240" preload controls> 
                @if (video.CloudApplicationVideoFileFormat.ToUpperInvariant() == "WEBM")
                { 
@*                    <source src="@Url.Content("~/" + videosFolder + video.CloudApplicationVideoFileName)"
                        type="video/webm; codecs=vp8,vorbis" />*@ 
                    <source src="@url" type="video/webm; codecs=vp8,vorbis" /> 

                }
                else if (video.CloudApplicationVideoFileFormat.ToUpperInvariant() == "OGV")
                { 
@*                    <source type="video/ogg; codecs=theora,vorbis" src="../Images/Videos/pr6.ogv"/>*@
                    <source type="video/ogg; codecs=theora,vorbis" src="@url"/>
                }
                else if (video.CloudApplicationVideoFileFormat.ToUpperInvariant() == "MP4" &&
                    Model.CustomSession.DetectedBrowser.ToUpperInvariant() != "FIREFOX")
                { 
@*                    <source src="../Images/Videos/pr6.mp4" />*@ 
                    <source src="@url" /> 
                } 
                </video> 
                @:</div>                         
            }

            if (useFallBackToFlashContainer)
            {
                @:<div class="video-documents" style="float: left;">
                <object data="http://releases.flowplayer.org/swf/flowplayer-3.2.1.swf" width="320" type="application/x-shockwave-flash" height="240"> 
                <param name="movie" value="http://releases.flowplayer.org/swf/flowplayer-3.2.1.swf" /> 
                <param name="allowfullscreen" value="true" /> 
                <param name="flashvars" value="config={'clip':{'url':'@url','autoPlay':false,'autoBuffering':true}}" /> 
@*                <embed width="50%" height="100%" name="plugin" src="@url" type="video/mp4" />*@
                <embed width="50%" height="100%" name="plugin" src="@url" type="video/@MIMEType" />
                </object> 
                @:</div>
            }

            if (useFallBackToQuickTimeContainer)
            {
                @:<div class="video-documents" style="float: left;">
                <object width="320" height="240" classid="clsid:02BF25D5-8C17-4B23-BC80-D3488ABDDC6B" codebase="http://www.apple.com/qtactivex/qtplugin.cab">
                <param name="src" value="@url" /> 
                <param name="href" value="@url" /> 
                <param name="target" value="myself" /> 
                <param name="controller" value="true" /> 
                <param name="autoplay" value="true" /> 
                <param name="scale" value="aspect" /> 
                <param name="allowfullscreen" value="true" /> 
                <embed width="320" height="240" type="video/quicktime" pluginspage="http://www.apple.com/quicktime/download/" src="@url" href="@url" target="myself" controller="true" autoplay="false" scale="aspect"></embed> 
                </object> 
                @:</div>                         
            }

            if (video.IsYouTubeStream)
            {
                @Video.Flash(path: video.CloudApplicationVideoURL,
                                     width: "320",
                                     height: "240",
                                     play: true,
                                     loop: true,
                                     menu: false,
                                     bgColor: "red",
                                     quality: "medium",
                                     scale: "exactfit",
                                     windowMode: "transparent")
            }
            if (video.CloudApplicationVideoFileFormat.ToUpperInvariant() == "SWF")
            {
                @Video.Flash(path: url,
                                     width: "320",
                                     height: "240",
                                     play: true,
                                     loop: true,
                                     menu: false,
                                     bgColor: "red",
                                     quality: "medium",
                                     scale: "exactfit",
                                     windowMode: "transparent")
            }
            }
        </td>
    </tr>
</table>
</div>
