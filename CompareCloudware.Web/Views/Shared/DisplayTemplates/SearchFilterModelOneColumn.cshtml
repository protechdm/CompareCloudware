@model CompareCloudware.Web.Models.SearchFilterModelOneColumn

@*home display TEST template
*@
@*SPECIFIC TEMPLATE FOR FEATURE
*@
    @if (!Model.SuppressFilterBehaviour)
    {
        <div class="search-filter-one-column">
        @if (@Model.IsValueBased && @Model.CanBeBooleanAndDataDriven)
        {
                <table id="dataTable" style="width:100%;">
                    <tr>
                        <td style="width:10%">
                            @if (!Model.SuppressFilterBehaviour)
                            {
                            @Html.CheckBoxFor(x => x.Col1Selected, new { @class = "filterParameter" })
                            }
                        </td>
                        <td style="width:50%" class="font-normal-11px-black">
                            @Html.LabelFor(x => x.Col1SearchFilterName, Model.Col1SearchFilterName, new { @class = "filterLabel font-normal-11px-black" })
                        </td>
                        <td style="width:40%">
                            @Html.DropDownListFor(x => x.Col1Value,
                            new SelectList(Model.Col1Values, "ModelValue", "DisplayValue", Model.Col1Value)
                             , new { @class = "set-combo-width-parameter filterParameter font-normal-11px-black" })
                        </td>
                        <td style="width:0%">
                            @Html.HiddenFor(x => x.IsValueBased)
                            @Html.HiddenFor(x => x.Col1Value)
                            @Html.HiddenFor(x => x.Col1SearchFilterName)
                            @Html.HiddenFor(x => x.Col1SearchFilterType)
                            @Html.HiddenFor(x => x.IsDataFloorDriven)
                            @Html.HiddenFor(x => x.IsDataCeilingDriven)
                            @Html.HiddenFor(x => x.CanBeBooleanAndDataDriven)
                            @Html.HiddenFor(x => x.SuppressFilterBehaviour)
                            @Html.HiddenFor(x => x.SearchFilterID)
                        </td>
                    </tr> 
                </table>

        }
        else
        {
            if (@Model.IsValueBased)
            {
                <table id="dataTable" style="width:100%;">
                    <tr>
                        <td style="width:10%">
                        </td>
                        <td style="width:50%" class="font-normal-11px-black">
                            @Html.LabelFor(x => x.Col1SearchFilterName, Model.Col1SearchFilterName, new { @class = "filterLabel font-normal-11px-black" })
                        </td>
                        <td style="width:40%">
                            @Html.DropDownListFor(x => x.Col1Value,
                            new SelectList(Model.Col1Values, "ModelValue", "DisplayValue", Model.Col1Value)
                             , new { @class = "set-combo-width-parameter filterParameter font-normal-11px-black" })
                        </td>
                        <td style="width:0%">
                            @Html.HiddenFor(x => x.IsValueBased)
                            @Html.HiddenFor(x => x.Col1Value)
                            @Html.HiddenFor(x => x.Col1SearchFilterName)
                            @Html.HiddenFor(x => x.Col1SearchFilterType)
                            @Html.HiddenFor(x => x.IsDataFloorDriven)
                            @Html.HiddenFor(x => x.IsDataCeilingDriven)
                            @Html.HiddenFor(x => x.SuppressFilterBehaviour)
                            @Html.HiddenFor(x => x.SearchFilterID)
                        </td>
                    </tr> 
                </table>
            }
            else
            {
                <table id="dataTable" style="width:100%;">
                    <tr>
                        <td style="width:10%">
                            @if (!Model.SuppressFilterBehaviour)
                            {
                            @Html.CheckBoxFor(x => x.Col1Selected, new { @class = "filterParameter" })
                            }
                        </td>
                        <td style="width:90%" class="font-normal-11px-black">
                            @Html.LabelFor(x => x.Col1SearchFilterName, Model.Col1SearchFilterName, new { @class = "filterLabel font-normal-11px-black" })
                        </td>
                        <td style="width:0%">
                            @Html.HiddenFor(x => x.Col1SearchFilterName)
                        </td>

                        <td style="width:0%">
                            @Html.HiddenFor(x => x.Col1SearchFilterType)
                            @Html.HiddenFor(x => x.SearchFilterID)
                        </td>
                    </tr> 
                </table>
            }
        }
        </div>

    }
    else
    {
@*        <table id="dataTable" style="width:100%;">
            <tr>
                <td style="width:0%">
                </td>
            </tr> 
        </table>*@
                    @Html.HiddenFor(x => x.IsValueBased)
                    @Html.HiddenFor(x => x.Col1Value)
                    @Html.HiddenFor(x => x.Col1SearchFilterName)
                    @Html.HiddenFor(x => x.Col1SearchFilterType)
                    @Html.HiddenFor(x => x.IsDataFloorDriven)
                    @Html.HiddenFor(x => x.IsDataCeilingDriven)
                    @Html.HiddenFor(x => x.CanBeBooleanAndDataDriven)
                    @Html.HiddenFor(x => x.SuppressFilterBehaviour)

    }
    
